export module compiler;

import std;
import tokens;
import lexer;
import nodes;
import parser;
import codegen;


export
class Compiler {
public:
    Compiler() {}

    auto exec(std::string program) -> void {
        Lexer lexer;

        std::vector<std::unique_ptr<Token>> tokens = lexer.tokenize(program);

        for (auto& token : tokens) {
            printToken(token.get());
            std::print(" ");
        }
        std::println();

        Parser parser;

        std::unique_ptr<ModuleNode> moduleNode = parser.parse(std::move(tokens));

        Codegen codeGenerator;

        codeGenerator.codegen(moduleNode.get());
    }
};
